library(caret)
# Intialize libraries
library(caret)
library(dplyr)
library(RCurl)
library(randomForest)
# Set working directory
setwd("C:/Users/Jesse/Documents/Coursera/Practical Machine Learning")
# Enable parallel backend
library(doParallel)
cl <- makeCluster(detectCores())
registerDoParallel(cl)
# Define URL's
trainingURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testingURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
# Load the files into dplyr data frames
training <- tbl_df(read.csv(trainingURL, header=T, na.strings=c("NA","")))
testing <- tbl_df(read.csv(testingURL, header=T, na.strings=c("NA","")))
training <- training[,7:160]
testing <- testing[,7:160]
# Remove variables with mostly NA's
mostlyData <- apply(!is.na(training),2,sum) > 19621
training <- training[,mostlyData]
testing <- testing[,mostlyData]
# Create a training and testing dataset
inTrain <- createDataPartition(y=training$classe, p=0.7, list=FALSE)
training2 <- training[inTrain,]
testing2 <- training[-inTrain,]
# Run a normal tree
treeModel <- train(classe ~ ., method="rpart", data=training2)
preProc <- trainControl(method="cv",number=5, allowParallel=TRUE)
# Create the model by using the train function of the caret package
rfModel <- train(classe ~ ., method="rf", tuneGrid=data.frame(mtry=2), trControl=preProc, prox=TRUE, data=training2)
rfModel$results
Perform prediction
predictRF <- predict(rfModel, testing2)
# Get confusionmatrix
confMatrix <- confusionMatrix(predictRF, testing2$classe)
# Determine accuracy
accuracy <- sum(predictRF == testing2$classe)/nrow(testing2)
confMatrix
# Predict the answers
answers <- predict(rfModel, testing)
# Load the function
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
# Run the function to make the files
setwd("C:/Users/Jesse/Documents/Coursera/Practical Machine Learning/Answers")
pml_write_files(answers)
setwd("C:/Users/Jesse/Documents/Coursera/Practical_Machine_Learning/Answers")
# Predict the answers
answers <- predict(rfModel, testing)
# Load the function
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
# Run the function to make the files
setwd("C:/Users/Jesse/Documents/Coursera/Practical_Machine_Learning/Answers")
pml_write_files(answers)
confMatrix <- confusionMatrix(predictRF, testing2$classe)
confMatrix
library(caret)
library(e1071)
setwd("C:/Users/Jesse/Documents/Coursera/Practical_Machine_Learning")
library(caret)
library(dplyr)
library(RCurl)
library(randomForest)
library(e1071)
?predict
confMatrix <- confusionMatrix(predictRF, testing2$classe)
confMatrix
