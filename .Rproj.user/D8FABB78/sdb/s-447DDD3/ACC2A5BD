{
    "contents" : "library(ISLR)\nlibrary(caret)\nWage <- subset(Wage, select=-c(logwage))\n\n# create a building and validation set\ninBuild <- createDataPartition(y=Wage$wage, p=.7, list=F)\nvalidation <- Wage[-inBuild,]\nbuildData <- Wage[inBuild,]\n\ninTrain <- createDataPartition(y=buildData$wage, p=.7, list=F)\ntraining <- buildData[inTrain,]\ntesting <- buildData[-inTrain,]\n\nmod1 <- train(wage ~ ., method=\"glm\", data=training)\nmod2 <- train(wage ~ ., method=\"rf\", data = training,\n              trControl = trainControl(method=\"cv\"), number=3)\n\npred1 <- predict(mod1, testing)\npred2 <- predict(mod2, testing)\nqplot(pred1, pred2, col=wage, data=testing)\n\npredDF <- data.frame(pred1, pred2, wage=testing$wage)\ncombModFit <- train(wage ~ ., method=\"gam\", data=predDF)\ncombPred <- predict(combModFit, predDF)\n\npred1V <- predict(mod1, validation)\npred2V <- predict(mod2, validation)\npredVDF <- data.frame(pred1=pred1V, pred2=pred2V)\ncombPredV <- predict(combModFit, predVDF)\n\n# forecasting /doenst work\nlibrary(quantmod)\nfrom.dat <- as.Date(\"01/01/08\", format=\"%m/%d/%y\")\nto.dat <- as.Date(\"12/31/13\", format=\"%m/%d/%y\")\ngetSymbols(\"GOOG\", src=\"google\", from=from.dat, to=to.dat)\n\nmGoog <- to.monthly(GOOG)\ngoogOpen <- Op(mGoog)\nts1 <- ts(googOpen, frequency=12)\nplot(ts1, xlab=\"Years+1\", ylab=\"GOOG\")\nplot(decompose(ts1))\n",
    "created" : 1450447375598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "740136186",
    "id" : "ACC2A5BD",
    "lastKnownWriteTime" : 1450885290,
    "path" : "~/Coursera/Practical_Machine_Learning/Week4.R",
    "project_path" : "Week4.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}